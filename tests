#!/bin/sh
# Run this to test a deployment

[ $TREEGIT_USERNAME='' ] || (echo 'Please specify a TREEGIT_USERNAME' && exit 1)
[ $TREEGIT_DOMAIN_NAME='' ] || (echo 'Please specify a TREEGIT_DOMAIN_NAME' && exit 1)

# Temporary stuff
repo=$(uuidgen)
tmp=$(mktemp -d)
cloneurl="http://$TREEGIT_DOMAIN_NAME/clone/$repo.git"

catch() {
  [ "$?" = '0' ] && passed=true

  if $passed
    then
    echo -ne '\033[32mPassed: '
  else
    echo -ne '\033[31mFailed: '
  fi
  echo -ne "\033[0m"

  echo $*
  passed=false
}

clear

wget --quiet -O - http://$TREEGIT_DOMAIN_NAME/?p=about|grep 'git-create' > /dev/null
catch 'I should see a git-create function at http://$TREEGIT_DOMAIN_NAME/?p=about.'

ssh $TREEGIT_USERNAME@$TREEGIT_DOMAIN_NAME 'echo hi' > /dev/null
catch 'I should be able to ssh to $TREEGIT_USERNAME@$TREEGIT_DOMAIN_NAME'

ssh $TREEGIT_USERNAME@$TREEGIT_DOMAIN_NAME "git-create-server $repo" > /dev/null
catch 'I should be able to create a repository on the server.'

wget --quiet -O - http://$TREEGIT_DOMAIN_NAME/|grep $repo > /dev/null
catch "I should see the repository on http://$TREEGIT_DOMAIN_NAME."

(
  cd $tmp > /dev/null
  mkdir foo > /dev/null
  cd foo > /dev/null
  git init > /dev/null
  echo bar > baz > /dev/null
  git add baz > /dev/null
  git commit . -m foobar > /dev/null
  git push $TREEGIT_USERNAME@$TREEGIT_DOMAIN_NAME:$repo.git master &> /dev/null
  catch 'I should be able to push to the newly-created repository.'
)

wget --quiet -O - http://$TREEGIT_DOMAIN_NAME/$repo/|grep $cloneurl > /dev/null
catch 'Once I push the repository, I should see the clone url.'

(
  cd $tmp
  git clone $cloneurl > /dev/null
  catch 'I should be able to clone the repository over http.'
)

echo \  
echo 'Clean up:'
echo "  rm -Rf $tmp"
echo "  ssh $TREEGIT_USERNAME@$TREEGIT_DOMAIN_NAME 'rm -Rf $repo.git'"
echo "I don't run these manually because bugs could be bad."
