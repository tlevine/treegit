#!/bin/sh
# Initialize a bare repository.

repo=$(basename "$1" .git)

if [ "$repo" = '' ]
  then
  echo 'Repository name may not be "" or ".git".'
  echo "usage: $0 <repository name>"
  exit 1
elif [ $(echo "$repo"|cut -c1) = '.' ]
  then
  echo 'Repository name may not begin with ".".'
  exit 1
elif [ -e "$HOME/$repo.git" ]
  then
  echo 'This repository is already on the server.'
  exit 1
elif [ "$repo" = 'clone' ]
  then
  echo "You're not allowed to name a repository \"clone\" on this server."
  exit 1
elif [ "$repo" = 'assets' ]
  then
  echo "You're not allowed to name a repository \"assets\" on this server."
  exit 1
else
  git init --bare "$HOME/$repo.git" > /dev/null &&

  # So that cloning over HTTP works
  # http://blog.publicfields.net/2011/03/how-to-setup-your-very-own-git-server.html
  echo '#!/bin/sh' > "$HOME/$repo.git/hooks/post-update" &&
  echo 'exec git update-server-info' >> "$HOME/$repo.git/hooks/post-update" &&
  echo 'exec cp ./cgitrc ./.git' >> "$HOME/$repo.git/hooks/post-update" &&
  chmod +x "$HOME/$repo.git/hooks/post-update" &&
  echo "The remote has been created. Run this to add it:" &&
  echo "  git remote add origin 'TREEGIT_USERNAME@TREEGIT_DOMAIN_NAME:$repo.git'"
fi
